{"version":3,"sources":["Components/Article.js","Components/DeveloperProfile.js","App.js","serviceWorker.js","index.js"],"names":["Article","props","className","key","src","item","links","mission_patch_small","alt","mission_name","flight_number","mission_id","join","launch_year","launch_success","rocket","first_stage","cores","map","d","x","land_success","DeveloperProfile","useState","name","link","developer","style","textAlign","backgroundColor","href","target","title","App","data","setData","launchYear","isSuccess","launch","setLaunch","landing","setLanding","year","setYear","useEffect","fetchFilterData","url","a","fetch","then","response","json","catch","error","result","console","log","message","setFilterData","event","apiBaseUrl","val","value","toLowerCase","onChange","y","idx","type","id","htmlFor","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4cc4bc9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Article = props => {\r\n    return (\r\n        <div className=\"col\" key={props.key}>\r\n            <div className=\"img-block\">\r\n                <img src={props.item.links.mission_patch_small} alt={props.item.mission_name} />\r\n            </div>\r\n            <div className=\"details\">\r\n                <p className=\"title\"> { props.item.mission_name } #{props.item.flight_number } </p>\r\n                <p><strong>Mission Ids</strong> : { props.item.mission_id.join(',') }</p>\r\n                <p><strong>Launch Year</strong> : { props.item.launch_year }</p>\r\n                <p><strong>Successful Launch</strong> : { (props.item.launch_success) ? \"true\": \"false\" }</p>\r\n                <p><strong>Successful Landing</strong> : { props.item.rocket.first_stage.cores.map((d,x)=>(\r\n                        <span key={x}>{  (d.land_success!==null) ? (d.land_success) ? \"true\" : \"false\" : \"null\" }</span>\r\n                ))}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Article;","import React, {useState } from 'react';\r\n\r\nconst DeveloperProfile = props =>{\r\n    const [developer]    = useState({name:\"Sanjeev Puspam\",link:\"https://www.linkedin.com/in/sanjeevpuspam\"});\r\n    return(\r\n        <h3 className=\"devlink\" style={{ textAlign:'center', backgroundColor:'#ffffff'}}>Developed by : <a href={developer.link} target=\"_blank\" title={developer.name}>{ '{'+developer.name+'}' }</a></h3>\r\n    )\r\n}\r\nexport default DeveloperProfile;","import React, {useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Article from './Components/Article';\r\nimport DeveloperProfile from './Components/DeveloperProfile';\r\n\r\nfunction App() {\r\n  \r\n  const [data,setData]     = useState([]);\r\n  const [launchYear]       = useState([2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006]);\r\n  const [isSuccess]        = useState([\"True\",\"False\"]);\r\n  \r\n  const [launch,setLaunch]    = useState('');\r\n  const [landing,setLanding]  = useState('');\r\n  const [year,setYear]        = useState('');\r\n\r\n  useEffect(()=> {\r\n    fetchFilterData(`https://api.spacexdata.com/v3/launches?limit=100`);\r\n  },[]);\r\n\r\n  const fetchFilterData = async(url)=> {\r\n    try{\r\n        const result = await fetch(url)\r\n          .then(response => response.json())\r\n          .catch(error => {\r\n            throw(error);\r\n          });\r\n\r\n      setData(result); \r\n    } catch(err){\r\n        console.log(`Error in Exception => ${err.message}`);\r\n    }\r\n  }\r\n  const setFilterData = (event) =>{\r\n      let apiBaseUrl  = \"https://api.spacexdata.com/v3/launches?limit=100\";\r\n      let val = (event.target.value).toLowerCase();\r\n\r\n      if(event.target.name === 'launch_year'){\r\n        setYear(val);\r\n        if(launch ==='' && landing ===''){  \r\n          return fetchFilterData(`${apiBaseUrl}&launch_year=${val}`);\r\n        } else if(launch ===''){\r\n          return fetchFilterData(`${apiBaseUrl}&launch_year=${val}&land_success=${landing}`);\r\n        } else if(landing ===''){\r\n          return fetchFilterData(`${apiBaseUrl}&launch_year=${val}&launch_success=${launch}`);\r\n        } else {\r\n          return fetchFilterData(`${apiBaseUrl}&launch_year=${val}&launch_success=${launch}&land_success=${landing}`);\r\n        }\r\n      } \r\n\r\n      if(event.target.name === 'successful_launch'){\r\n        setLaunch(val);\r\n        if(year ===0 && landing ===''){\r\n          return fetchFilterData(`${apiBaseUrl}&launch_success=${val}`)\r\n        } else if(year === 0){\r\n          return fetchFilterData(`${apiBaseUrl}&launch_success=${val}&land_success=${landing}`);\r\n        } else if(landing ===''){\r\n          return fetchFilterData(`${apiBaseUrl}&launch_success=${val}&launch_year=${year}`);\r\n        } else {\r\n          return fetchFilterData(`${apiBaseUrl}&launch_success=${val}&launch_year=${year}&land_success=${landing}`);\r\n        }\r\n      }\r\n      if(event.target.name === 'successful_landing'){\r\n        setLanding(val);\r\n        if(year ===0 && launch ===''){\r\n          return fetchFilterData(`${apiBaseUrl}&land_success=${val}`);\r\n        } else if(year === 0){\r\n          return fetchFilterData(`${apiBaseUrl}&launch_success=${launch}&land_success=${val}`);\r\n        } else if(launch === ''){  \r\n          return fetchFilterData(`${apiBaseUrl}&launch_year=${year}&land_success=${val}`);\r\n        } else {\r\n          return fetchFilterData(`${apiBaseUrl}&launch_success=${launch}&launch_year=${year}&land_success=${val}`);\r\n        }        \r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <h2>SpaceX launch Programs</h2>\r\n    <aside>\r\n    <h3 className=\"title\">Spacex Launch Year</h3>\r\n        <div className=\"filter\" onChange={setFilterData}>\r\n          {\r\n            launchYear.map((y,idx)=>{\r\n              return (<div key={idx} className=\"radio-toolbar\">\r\n                  <input type=\"radio\" id={ \"launch_year_\"+y} value={y} name=\"launch_year\" /> \r\n                  <label htmlFor={ \"launch_year_\"+y}>{ y }</label>\r\n              </div>)\r\n            })\r\n          }\r\n        </div>\r\n        <h3 className=\"title\">Successful Launch</h3>\r\n        <div className=\"filter\" onChange={setFilterData}>\r\n          {\r\n              isSuccess.map((y,idx)=>{\r\n                return (<div key={idx} className=\"radio-toolbar\">\r\n                    <input type=\"radio\" id={ \"successful_launch\"+y} value={y} name=\"successful_launch\" /> \r\n                    <label htmlFor={ \"successful_launch\"+y}>{ y }</label>\r\n                </div>)\r\n              })\r\n            }\r\n        </div>\r\n        <h3 className=\"title\">Successful Landing</h3>\r\n        <div className=\"filter\" onChange={setFilterData}>\r\n            {\r\n              isSuccess.map((y,idx)=>{\r\n                  return (<div key={idx} className=\"radio-toolbar\">\r\n                      <input type=\"radio\" id={ \"successful_landing\"+y} value={y} name=\"successful_landing\" /> \r\n                      <label htmlFor={ \"successful_landing\"+y}>{ y }</label>\r\n                  </div>)\r\n                })\r\n              }\r\n        </div>\r\n    </aside>\r\n    <article>\r\n        { data.length > 0 ? data.map((item,idx) => ( \r\n          <Article item={item} key={idx} /> \r\n          )) : <div className=\"col\" key=\"0\"><div className=\"img-block\">\r\n                  <img src=\"https://i.pinimg.com/originals/a2/dc/96/a2dc9668f2cf170fe3efeb263128b0e7.gif\" alt=\"Not found\" />\r\n              </div><div className=\"details\"></div></div>\r\n      }\r\n    </article>\r\n      <DeveloperProfile />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}